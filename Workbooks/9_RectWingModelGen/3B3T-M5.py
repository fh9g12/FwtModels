from sympy import *
def get_M():
	c = Symbol('c')
	delta_m = Symbol('delta_m')
	rho_t = Symbol('rho_t')
	s_t = Symbol('s_t')
	sigma = Symbol('sigma')
	eta0 = Symbol('eta0')
	eta1 = Symbol('eta1')
	eta2 = Symbol('eta2')
	e_0 = Symbol('e_0')
	eta3 = Symbol('eta3')
	eta4 = Symbol('eta4')
	eta5 = Symbol('eta5')
	e = ImmutableDenseMatrix([[c*delta_m*rho_t*s_t**5*sigma**5/eta0**2 - 4*c*delta_m*rho_t*s_t**5*sigma**4/eta0**2 + 6*c*delta_m*rho_t*s_t**5*sigma**3/eta0**2 - 4*c*delta_m*rho_t*s_t**5*sigma**2/eta0**2 + c*delta_m*rho_t*s_t**5*sigma/eta0**2 - c*rho_t*s_t**5*sigma**5/(5*eta0**2) + c*rho_t*s_t**5*sigma**4/eta0**2 - 2*c*rho_t*s_t**5*sigma**3/eta0**2 + 2*c*rho_t*s_t**5*sigma**2/eta0**2 - c*rho_t*s_t**5*sigma/eta0**2 + c*rho_t*s_t**5/(5*eta0**2), -c*delta_m*rho_t*s_t**6*sigma**6/(eta0*eta1) + 5*c*delta_m*rho_t*s_t**6*sigma**5/(eta0*eta1) - 10*c*delta_m*rho_t*s_t**6*sigma**4/(eta0*eta1) + 10*c*delta_m*rho_t*s_t**6*sigma**3/(eta0*eta1) - 5*c*delta_m*rho_t*s_t**6*sigma**2/(eta0*eta1) + c*delta_m*rho_t*s_t**6*sigma/(eta0*eta1) + c*rho_t*s_t**6*sigma**6/(6*eta0*eta1) - c*rho_t*s_t**6*sigma**5/(eta0*eta1) + 5*c*rho_t*s_t**6*sigma**4/(2*eta0*eta1) - 10*c*rho_t*s_t**6*sigma**3/(3*eta0*eta1) + 5*c*rho_t*s_t**6*sigma**2/(2*eta0*eta1) - c*rho_t*s_t**6*sigma/(eta0*eta1) + c*rho_t*s_t**6/(6*eta0*eta1), c*delta_m*rho_t*s_t**7*sigma**7/(eta0*eta2) - 6*c*delta_m*rho_t*s_t**7*sigma**6/(eta0*eta2) + 15*c*delta_m*rho_t*s_t**7*sigma**5/(eta0*eta2) - 20*c*delta_m*rho_t*s_t**7*sigma**4/(eta0*eta2) + 15*c*delta_m*rho_t*s_t**7*sigma**3/(eta0*eta2) - 6*c*delta_m*rho_t*s_t**7*sigma**2/(eta0*eta2) + c*delta_m*rho_t*s_t**7*sigma/(eta0*eta2) - c*rho_t*s_t**7*sigma**7/(7*eta0*eta2) + c*rho_t*s_t**7*sigma**6/(eta0*eta2) - 3*c*rho_t*s_t**7*sigma**5/(eta0*eta2) + 5*c*rho_t*s_t**7*sigma**4/(eta0*eta2) - 5*c*rho_t*s_t**7*sigma**3/(eta0*eta2) + 3*c*rho_t*s_t**7*sigma**2/(eta0*eta2) - c*rho_t*s_t**7*sigma/(eta0*eta2) + c*rho_t*s_t**7/(7*eta0*eta2), c**2*e_0*rho_t*s_t**4*sigma**4/(4*eta0*eta3) - c**2*e_0*rho_t*s_t**4*sigma**3/(eta0*eta3) + 3*c**2*e_0*rho_t*s_t**4*sigma**2/(2*eta0*eta3) - c**2*e_0*rho_t*s_t**4*sigma/(eta0*eta3) + c**2*e_0*rho_t*s_t**4/(4*eta0*eta3) - c**2*rho_t*s_t**4*sigma**4/(16*eta0*eta3) + c**2*rho_t*s_t**4*sigma**3/(4*eta0*eta3) - 3*c**2*rho_t*s_t**4*sigma**2/(8*eta0*eta3) + c**2*rho_t*s_t**4*sigma/(4*eta0*eta3) - c**2*rho_t*s_t**4/(16*eta0*eta3), -c**2*e_0*rho_t*s_t**5*sigma**5/(5*eta0*eta4) + c**2*e_0*rho_t*s_t**5*sigma**4/(eta0*eta4) - 2*c**2*e_0*rho_t*s_t**5*sigma**3/(eta0*eta4) + 2*c**2*e_0*rho_t*s_t**5*sigma**2/(eta0*eta4) - c**2*e_0*rho_t*s_t**5*sigma/(eta0*eta4) + c**2*e_0*rho_t*s_t**5/(5*eta0*eta4) + c**2*rho_t*s_t**5*sigma**5/(20*eta0*eta4) - c**2*rho_t*s_t**5*sigma**4/(4*eta0*eta4) + c**2*rho_t*s_t**5*sigma**3/(2*eta0*eta4) - c**2*rho_t*s_t**5*sigma**2/(2*eta0*eta4) + c**2*rho_t*s_t**5*sigma/(4*eta0*eta4) - c**2*rho_t*s_t**5/(20*eta0*eta4), c**2*e_0*rho_t*s_t**6*sigma**6/(6*eta0*eta5) - c**2*e_0*rho_t*s_t**6*sigma**5/(eta0*eta5) + 5*c**2*e_0*rho_t*s_t**6*sigma**4/(2*eta0*eta5) - 10*c**2*e_0*rho_t*s_t**6*sigma**3/(3*eta0*eta5) + 5*c**2*e_0*rho_t*s_t**6*sigma**2/(2*eta0*eta5) - c**2*e_0*rho_t*s_t**6*sigma/(eta0*eta5) + c**2*e_0*rho_t*s_t**6/(6*eta0*eta5) - c**2*rho_t*s_t**6*sigma**6/(24*eta0*eta5) + c**2*rho_t*s_t**6*sigma**5/(4*eta0*eta5) - 5*c**2*rho_t*s_t**6*sigma**4/(8*eta0*eta5) + 5*c**2*rho_t*s_t**6*sigma**3/(6*eta0*eta5) - 5*c**2*rho_t*s_t**6*sigma**2/(8*eta0*eta5) + c**2*rho_t*s_t**6*sigma/(4*eta0*eta5) - c**2*rho_t*s_t**6/(24*eta0*eta5), -c*delta_m*rho_t*s_t**4*sigma**4/(2*eta0) + c*delta_m*rho_t*s_t**4*sigma**3/eta0 - c*delta_m*rho_t*s_t**4*sigma**2/(2*eta0)], [-c*delta_m*rho_t*s_t**6*sigma**6/(eta0*eta1) + 5*c*delta_m*rho_t*s_t**6*sigma**5/(eta0*eta1) - 10*c*delta_m*rho_t*s_t**6*sigma**4/(eta0*eta1) + 10*c*delta_m*rho_t*s_t**6*sigma**3/(eta0*eta1) - 5*c*delta_m*rho_t*s_t**6*sigma**2/(eta0*eta1) + c*delta_m*rho_t*s_t**6*sigma/(eta0*eta1) + c*rho_t*s_t**6*sigma**6/(6*eta0*eta1) - c*rho_t*s_t**6*sigma**5/(eta0*eta1) + 5*c*rho_t*s_t**6*sigma**4/(2*eta0*eta1) - 10*c*rho_t*s_t**6*sigma**3/(3*eta0*eta1) + 5*c*rho_t*s_t**6*sigma**2/(2*eta0*eta1) - c*rho_t*s_t**6*sigma/(eta0*eta1) + c*rho_t*s_t**6/(6*eta0*eta1), c*delta_m*rho_t*s_t**7*sigma**7/eta1**2 - 6*c*delta_m*rho_t*s_t**7*sigma**6/eta1**2 + 15*c*delta_m*rho_t*s_t**7*sigma**5/eta1**2 - 20*c*delta_m*rho_t*s_t**7*sigma**4/eta1**2 + 15*c*delta_m*rho_t*s_t**7*sigma**3/eta1**2 - 6*c*delta_m*rho_t*s_t**7*sigma**2/eta1**2 + c*delta_m*rho_t*s_t**7*sigma/eta1**2 - c*rho_t*s_t**7*sigma**7/(7*eta1**2) + c*rho_t*s_t**7*sigma**6/eta1**2 - 3*c*rho_t*s_t**7*sigma**5/eta1**2 + 5*c*rho_t*s_t**7*sigma**4/eta1**2 - 5*c*rho_t*s_t**7*sigma**3/eta1**2 + 3*c*rho_t*s_t**7*sigma**2/eta1**2 - c*rho_t*s_t**7*sigma/eta1**2 + c*rho_t*s_t**7/(7*eta1**2), -c*delta_m*rho_t*s_t**8*sigma**8/(eta1*eta2) + 7*c*delta_m*rho_t*s_t**8*sigma**7/(eta1*eta2) - 21*c*delta_m*rho_t*s_t**8*sigma**6/(eta1*eta2) + 35*c*delta_m*rho_t*s_t**8*sigma**5/(eta1*eta2) - 35*c*delta_m*rho_t*s_t**8*sigma**4/(eta1*eta2) + 21*c*delta_m*rho_t*s_t**8*sigma**3/(eta1*eta2) - 7*c*delta_m*rho_t*s_t**8*sigma**2/(eta1*eta2) + c*delta_m*rho_t*s_t**8*sigma/(eta1*eta2) + c*rho_t*s_t**8*sigma**8/(8*eta1*eta2) - c*rho_t*s_t**8*sigma**7/(eta1*eta2) + 7*c*rho_t*s_t**8*sigma**6/(2*eta1*eta2) - 7*c*rho_t*s_t**8*sigma**5/(eta1*eta2) + 35*c*rho_t*s_t**8*sigma**4/(4*eta1*eta2) - 7*c*rho_t*s_t**8*sigma**3/(eta1*eta2) + 7*c*rho_t*s_t**8*sigma**2/(2*eta1*eta2) - c*rho_t*s_t**8*sigma/(eta1*eta2) + c*rho_t*s_t**8/(8*eta1*eta2), -c**2*e_0*rho_t*s_t**5*sigma**5/(5*eta1*eta3) + c**2*e_0*rho_t*s_t**5*sigma**4/(eta1*eta3) - 2*c**2*e_0*rho_t*s_t**5*sigma**3/(eta1*eta3) + 2*c**2*e_0*rho_t*s_t**5*sigma**2/(eta1*eta3) - c**2*e_0*rho_t*s_t**5*sigma/(eta1*eta3) + c**2*e_0*rho_t*s_t**5/(5*eta1*eta3) + c**2*rho_t*s_t**5*sigma**5/(20*eta1*eta3) - c**2*rho_t*s_t**5*sigma**4/(4*eta1*eta3) + c**2*rho_t*s_t**5*sigma**3/(2*eta1*eta3) - c**2*rho_t*s_t**5*sigma**2/(2*eta1*eta3) + c**2*rho_t*s_t**5*sigma/(4*eta1*eta3) - c**2*rho_t*s_t**5/(20*eta1*eta3), c**2*e_0*rho_t*s_t**6*sigma**6/(6*eta1*eta4) - c**2*e_0*rho_t*s_t**6*sigma**5/(eta1*eta4) + 5*c**2*e_0*rho_t*s_t**6*sigma**4/(2*eta1*eta4) - 10*c**2*e_0*rho_t*s_t**6*sigma**3/(3*eta1*eta4) + 5*c**2*e_0*rho_t*s_t**6*sigma**2/(2*eta1*eta4) - c**2*e_0*rho_t*s_t**6*sigma/(eta1*eta4) + c**2*e_0*rho_t*s_t**6/(6*eta1*eta4) - c**2*rho_t*s_t**6*sigma**6/(24*eta1*eta4) + c**2*rho_t*s_t**6*sigma**5/(4*eta1*eta4) - 5*c**2*rho_t*s_t**6*sigma**4/(8*eta1*eta4) + 5*c**2*rho_t*s_t**6*sigma**3/(6*eta1*eta4) - 5*c**2*rho_t*s_t**6*sigma**2/(8*eta1*eta4) + c**2*rho_t*s_t**6*sigma/(4*eta1*eta4) - c**2*rho_t*s_t**6/(24*eta1*eta4), -c**2*e_0*rho_t*s_t**7*sigma**7/(7*eta1*eta5) + c**2*e_0*rho_t*s_t**7*sigma**6/(eta1*eta5) - 3*c**2*e_0*rho_t*s_t**7*sigma**5/(eta1*eta5) + 5*c**2*e_0*rho_t*s_t**7*sigma**4/(eta1*eta5) - 5*c**2*e_0*rho_t*s_t**7*sigma**3/(eta1*eta5) + 3*c**2*e_0*rho_t*s_t**7*sigma**2/(eta1*eta5) - c**2*e_0*rho_t*s_t**7*sigma/(eta1*eta5) + c**2*e_0*rho_t*s_t**7/(7*eta1*eta5) + c**2*rho_t*s_t**7*sigma**7/(28*eta1*eta5) - c**2*rho_t*s_t**7*sigma**6/(4*eta1*eta5) + 3*c**2*rho_t*s_t**7*sigma**5/(4*eta1*eta5) - 5*c**2*rho_t*s_t**7*sigma**4/(4*eta1*eta5) + 5*c**2*rho_t*s_t**7*sigma**3/(4*eta1*eta5) - 3*c**2*rho_t*s_t**7*sigma**2/(4*eta1*eta5) + c**2*rho_t*s_t**7*sigma/(4*eta1*eta5) - c**2*rho_t*s_t**7/(28*eta1*eta5), c*delta_m*rho_t*s_t**5*sigma**5/(2*eta1) - 3*c*delta_m*rho_t*s_t**5*sigma**4/(2*eta1) + 3*c*delta_m*rho_t*s_t**5*sigma**3/(2*eta1) - c*delta_m*rho_t*s_t**5*sigma**2/(2*eta1)], [c*delta_m*rho_t*s_t**7*sigma**7/(eta0*eta2) - 6*c*delta_m*rho_t*s_t**7*sigma**6/(eta0*eta2) + 15*c*delta_m*rho_t*s_t**7*sigma**5/(eta0*eta2) - 20*c*delta_m*rho_t*s_t**7*sigma**4/(eta0*eta2) + 15*c*delta_m*rho_t*s_t**7*sigma**3/(eta0*eta2) - 6*c*delta_m*rho_t*s_t**7*sigma**2/(eta0*eta2) + c*delta_m*rho_t*s_t**7*sigma/(eta0*eta2) - c*rho_t*s_t**7*sigma**7/(7*eta0*eta2) + c*rho_t*s_t**7*sigma**6/(eta0*eta2) - 3*c*rho_t*s_t**7*sigma**5/(eta0*eta2) + 5*c*rho_t*s_t**7*sigma**4/(eta0*eta2) - 5*c*rho_t*s_t**7*sigma**3/(eta0*eta2) + 3*c*rho_t*s_t**7*sigma**2/(eta0*eta2) - c*rho_t*s_t**7*sigma/(eta0*eta2) + c*rho_t*s_t**7/(7*eta0*eta2), -c*delta_m*rho_t*s_t**8*sigma**8/(eta1*eta2) + 7*c*delta_m*rho_t*s_t**8*sigma**7/(eta1*eta2) - 21*c*delta_m*rho_t*s_t**8*sigma**6/(eta1*eta2) + 35*c*delta_m*rho_t*s_t**8*sigma**5/(eta1*eta2) - 35*c*delta_m*rho_t*s_t**8*sigma**4/(eta1*eta2) + 21*c*delta_m*rho_t*s_t**8*sigma**3/(eta1*eta2) - 7*c*delta_m*rho_t*s_t**8*sigma**2/(eta1*eta2) + c*delta_m*rho_t*s_t**8*sigma/(eta1*eta2) + c*rho_t*s_t**8*sigma**8/(8*eta1*eta2) - c*rho_t*s_t**8*sigma**7/(eta1*eta2) + 7*c*rho_t*s_t**8*sigma**6/(2*eta1*eta2) - 7*c*rho_t*s_t**8*sigma**5/(eta1*eta2) + 35*c*rho_t*s_t**8*sigma**4/(4*eta1*eta2) - 7*c*rho_t*s_t**8*sigma**3/(eta1*eta2) + 7*c*rho_t*s_t**8*sigma**2/(2*eta1*eta2) - c*rho_t*s_t**8*sigma/(eta1*eta2) + c*rho_t*s_t**8/(8*eta1*eta2), c*delta_m*rho_t*s_t**9*sigma**9/eta2**2 - 8*c*delta_m*rho_t*s_t**9*sigma**8/eta2**2 + 28*c*delta_m*rho_t*s_t**9*sigma**7/eta2**2 - 56*c*delta_m*rho_t*s_t**9*sigma**6/eta2**2 + 70*c*delta_m*rho_t*s_t**9*sigma**5/eta2**2 - 56*c*delta_m*rho_t*s_t**9*sigma**4/eta2**2 + 28*c*delta_m*rho_t*s_t**9*sigma**3/eta2**2 - 8*c*delta_m*rho_t*s_t**9*sigma**2/eta2**2 + c*delta_m*rho_t*s_t**9*sigma/eta2**2 - c*rho_t*s_t**9*sigma**9/(9*eta2**2) + c*rho_t*s_t**9*sigma**8/eta2**2 - 4*c*rho_t*s_t**9*sigma**7/eta2**2 + 28*c*rho_t*s_t**9*sigma**6/(3*eta2**2) - 14*c*rho_t*s_t**9*sigma**5/eta2**2 + 14*c*rho_t*s_t**9*sigma**4/eta2**2 - 28*c*rho_t*s_t**9*sigma**3/(3*eta2**2) + 4*c*rho_t*s_t**9*sigma**2/eta2**2 - c*rho_t*s_t**9*sigma/eta2**2 + c*rho_t*s_t**9/(9*eta2**2), c**2*e_0*rho_t*s_t**6*sigma**6/(6*eta2*eta3) - c**2*e_0*rho_t*s_t**6*sigma**5/(eta2*eta3) + 5*c**2*e_0*rho_t*s_t**6*sigma**4/(2*eta2*eta3) - 10*c**2*e_0*rho_t*s_t**6*sigma**3/(3*eta2*eta3) + 5*c**2*e_0*rho_t*s_t**6*sigma**2/(2*eta2*eta3) - c**2*e_0*rho_t*s_t**6*sigma/(eta2*eta3) + c**2*e_0*rho_t*s_t**6/(6*eta2*eta3) - c**2*rho_t*s_t**6*sigma**6/(24*eta2*eta3) + c**2*rho_t*s_t**6*sigma**5/(4*eta2*eta3) - 5*c**2*rho_t*s_t**6*sigma**4/(8*eta2*eta3) + 5*c**2*rho_t*s_t**6*sigma**3/(6*eta2*eta3) - 5*c**2*rho_t*s_t**6*sigma**2/(8*eta2*eta3) + c**2*rho_t*s_t**6*sigma/(4*eta2*eta3) - c**2*rho_t*s_t**6/(24*eta2*eta3), -c**2*e_0*rho_t*s_t**7*sigma**7/(7*eta2*eta4) + c**2*e_0*rho_t*s_t**7*sigma**6/(eta2*eta4) - 3*c**2*e_0*rho_t*s_t**7*sigma**5/(eta2*eta4) + 5*c**2*e_0*rho_t*s_t**7*sigma**4/(eta2*eta4) - 5*c**2*e_0*rho_t*s_t**7*sigma**3/(eta2*eta4) + 3*c**2*e_0*rho_t*s_t**7*sigma**2/(eta2*eta4) - c**2*e_0*rho_t*s_t**7*sigma/(eta2*eta4) + c**2*e_0*rho_t*s_t**7/(7*eta2*eta4) + c**2*rho_t*s_t**7*sigma**7/(28*eta2*eta4) - c**2*rho_t*s_t**7*sigma**6/(4*eta2*eta4) + 3*c**2*rho_t*s_t**7*sigma**5/(4*eta2*eta4) - 5*c**2*rho_t*s_t**7*sigma**4/(4*eta2*eta4) + 5*c**2*rho_t*s_t**7*sigma**3/(4*eta2*eta4) - 3*c**2*rho_t*s_t**7*sigma**2/(4*eta2*eta4) + c**2*rho_t*s_t**7*sigma/(4*eta2*eta4) - c**2*rho_t*s_t**7/(28*eta2*eta4), c**2*e_0*rho_t*s_t**8*sigma**8/(8*eta2*eta5) - c**2*e_0*rho_t*s_t**8*sigma**7/(eta2*eta5) + 7*c**2*e_0*rho_t*s_t**8*sigma**6/(2*eta2*eta5) - 7*c**2*e_0*rho_t*s_t**8*sigma**5/(eta2*eta5) + 35*c**2*e_0*rho_t*s_t**8*sigma**4/(4*eta2*eta5) - 7*c**2*e_0*rho_t*s_t**8*sigma**3/(eta2*eta5) + 7*c**2*e_0*rho_t*s_t**8*sigma**2/(2*eta2*eta5) - c**2*e_0*rho_t*s_t**8*sigma/(eta2*eta5) + c**2*e_0*rho_t*s_t**8/(8*eta2*eta5) - c**2*rho_t*s_t**8*sigma**8/(32*eta2*eta5) + c**2*rho_t*s_t**8*sigma**7/(4*eta2*eta5) - 7*c**2*rho_t*s_t**8*sigma**6/(8*eta2*eta5) + 7*c**2*rho_t*s_t**8*sigma**5/(4*eta2*eta5) - 35*c**2*rho_t*s_t**8*sigma**4/(16*eta2*eta5) + 7*c**2*rho_t*s_t**8*sigma**3/(4*eta2*eta5) - 7*c**2*rho_t*s_t**8*sigma**2/(8*eta2*eta5) + c**2*rho_t*s_t**8*sigma/(4*eta2*eta5) - c**2*rho_t*s_t**8/(32*eta2*eta5), -c*delta_m*rho_t*s_t**6*sigma**6/(2*eta2) + 2*c*delta_m*rho_t*s_t**6*sigma**5/eta2 - 3*c*delta_m*rho_t*s_t**6*sigma**4/eta2 + 2*c*delta_m*rho_t*s_t**6*sigma**3/eta2 - c*delta_m*rho_t*s_t**6*sigma**2/(2*eta2)], [c**2*e_0*rho_t*s_t**4*sigma**4/(4*eta0*eta3) - c**2*e_0*rho_t*s_t**4*sigma**3/(eta0*eta3) + 3*c**2*e_0*rho_t*s_t**4*sigma**2/(2*eta0*eta3) - c**2*e_0*rho_t*s_t**4*sigma/(eta0*eta3) + c**2*e_0*rho_t*s_t**4/(4*eta0*eta3) - c**2*rho_t*s_t**4*sigma**4/(16*eta0*eta3) + c**2*rho_t*s_t**4*sigma**3/(4*eta0*eta3) - 3*c**2*rho_t*s_t**4*sigma**2/(8*eta0*eta3) + c**2*rho_t*s_t**4*sigma/(4*eta0*eta3) - c**2*rho_t*s_t**4/(16*eta0*eta3), -c**2*e_0*rho_t*s_t**5*sigma**5/(5*eta1*eta3) + c**2*e_0*rho_t*s_t**5*sigma**4/(eta1*eta3) - 2*c**2*e_0*rho_t*s_t**5*sigma**3/(eta1*eta3) + 2*c**2*e_0*rho_t*s_t**5*sigma**2/(eta1*eta3) - c**2*e_0*rho_t*s_t**5*sigma/(eta1*eta3) + c**2*e_0*rho_t*s_t**5/(5*eta1*eta3) + c**2*rho_t*s_t**5*sigma**5/(20*eta1*eta3) - c**2*rho_t*s_t**5*sigma**4/(4*eta1*eta3) + c**2*rho_t*s_t**5*sigma**3/(2*eta1*eta3) - c**2*rho_t*s_t**5*sigma**2/(2*eta1*eta3) + c**2*rho_t*s_t**5*sigma/(4*eta1*eta3) - c**2*rho_t*s_t**5/(20*eta1*eta3), c**2*e_0*rho_t*s_t**6*sigma**6/(6*eta2*eta3) - c**2*e_0*rho_t*s_t**6*sigma**5/(eta2*eta3) + 5*c**2*e_0*rho_t*s_t**6*sigma**4/(2*eta2*eta3) - 10*c**2*e_0*rho_t*s_t**6*sigma**3/(3*eta2*eta3) + 5*c**2*e_0*rho_t*s_t**6*sigma**2/(2*eta2*eta3) - c**2*e_0*rho_t*s_t**6*sigma/(eta2*eta3) + c**2*e_0*rho_t*s_t**6/(6*eta2*eta3) - c**2*rho_t*s_t**6*sigma**6/(24*eta2*eta3) + c**2*rho_t*s_t**6*sigma**5/(4*eta2*eta3) - 5*c**2*rho_t*s_t**6*sigma**4/(8*eta2*eta3) + 5*c**2*rho_t*s_t**6*sigma**3/(6*eta2*eta3) - 5*c**2*rho_t*s_t**6*sigma**2/(8*eta2*eta3) + c**2*rho_t*s_t**6*sigma/(4*eta2*eta3) - c**2*rho_t*s_t**6/(24*eta2*eta3), -c**3*e_0**2*rho_t*s_t**3*sigma**3/(3*eta3**2) + c**3*e_0**2*rho_t*s_t**3*sigma**2/eta3**2 - c**3*e_0**2*rho_t*s_t**3*sigma/eta3**2 + c**3*e_0**2*rho_t*s_t**3/(3*eta3**2) + c**3*e_0*rho_t*s_t**3*sigma**3/(6*eta3**2) - c**3*e_0*rho_t*s_t**3*sigma**2/(2*eta3**2) + c**3*e_0*rho_t*s_t**3*sigma/(2*eta3**2) - c**3*e_0*rho_t*s_t**3/(6*eta3**2) - 7*c**3*rho_t*s_t**3*sigma**3/(144*eta3**2) + 7*c**3*rho_t*s_t**3*sigma**2/(48*eta3**2) - 7*c**3*rho_t*s_t**3*sigma/(48*eta3**2) + 7*c**3*rho_t*s_t**3/(144*eta3**2), c**3*e_0**2*rho_t*s_t**4*sigma**4/(4*eta3*eta4) - c**3*e_0**2*rho_t*s_t**4*sigma**3/(eta3*eta4) + 3*c**3*e_0**2*rho_t*s_t**4*sigma**2/(2*eta3*eta4) - c**3*e_0**2*rho_t*s_t**4*sigma/(eta3*eta4) + c**3*e_0**2*rho_t*s_t**4/(4*eta3*eta4) - c**3*e_0*rho_t*s_t**4*sigma**4/(8*eta3*eta4) + c**3*e_0*rho_t*s_t**4*sigma**3/(2*eta3*eta4) - 3*c**3*e_0*rho_t*s_t**4*sigma**2/(4*eta3*eta4) + c**3*e_0*rho_t*s_t**4*sigma/(2*eta3*eta4) - c**3*e_0*rho_t*s_t**4/(8*eta3*eta4) + 7*c**3*rho_t*s_t**4*sigma**4/(192*eta3*eta4) - 7*c**3*rho_t*s_t**4*sigma**3/(48*eta3*eta4) + 7*c**3*rho_t*s_t**4*sigma**2/(32*eta3*eta4) - 7*c**3*rho_t*s_t**4*sigma/(48*eta3*eta4) + 7*c**3*rho_t*s_t**4/(192*eta3*eta4), -c**3*e_0**2*rho_t*s_t**5*sigma**5/(5*eta3*eta5) + c**3*e_0**2*rho_t*s_t**5*sigma**4/(eta3*eta5) - 2*c**3*e_0**2*rho_t*s_t**5*sigma**3/(eta3*eta5) + 2*c**3*e_0**2*rho_t*s_t**5*sigma**2/(eta3*eta5) - c**3*e_0**2*rho_t*s_t**5*sigma/(eta3*eta5) + c**3*e_0**2*rho_t*s_t**5/(5*eta3*eta5) + c**3*e_0*rho_t*s_t**5*sigma**5/(10*eta3*eta5) - c**3*e_0*rho_t*s_t**5*sigma**4/(2*eta3*eta5) + c**3*e_0*rho_t*s_t**5*sigma**3/(eta3*eta5) - c**3*e_0*rho_t*s_t**5*sigma**2/(eta3*eta5) + c**3*e_0*rho_t*s_t**5*sigma/(2*eta3*eta5) - c**3*e_0*rho_t*s_t**5/(10*eta3*eta5) - 7*c**3*rho_t*s_t**5*sigma**5/(240*eta3*eta5) + 7*c**3*rho_t*s_t**5*sigma**4/(48*eta3*eta5) - 7*c**3*rho_t*s_t**5*sigma**3/(24*eta3*eta5) + 7*c**3*rho_t*s_t**5*sigma**2/(24*eta3*eta5) - 7*c**3*rho_t*s_t**5*sigma/(48*eta3*eta5) + 7*c**3*rho_t*s_t**5/(240*eta3*eta5), 0], [-c**2*e_0*rho_t*s_t**5*sigma**5/(5*eta0*eta4) + c**2*e_0*rho_t*s_t**5*sigma**4/(eta0*eta4) - 2*c**2*e_0*rho_t*s_t**5*sigma**3/(eta0*eta4) + 2*c**2*e_0*rho_t*s_t**5*sigma**2/(eta0*eta4) - c**2*e_0*rho_t*s_t**5*sigma/(eta0*eta4) + c**2*e_0*rho_t*s_t**5/(5*eta0*eta4) + c**2*rho_t*s_t**5*sigma**5/(20*eta0*eta4) - c**2*rho_t*s_t**5*sigma**4/(4*eta0*eta4) + c**2*rho_t*s_t**5*sigma**3/(2*eta0*eta4) - c**2*rho_t*s_t**5*sigma**2/(2*eta0*eta4) + c**2*rho_t*s_t**5*sigma/(4*eta0*eta4) - c**2*rho_t*s_t**5/(20*eta0*eta4), c**2*e_0*rho_t*s_t**6*sigma**6/(6*eta1*eta4) - c**2*e_0*rho_t*s_t**6*sigma**5/(eta1*eta4) + 5*c**2*e_0*rho_t*s_t**6*sigma**4/(2*eta1*eta4) - 10*c**2*e_0*rho_t*s_t**6*sigma**3/(3*eta1*eta4) + 5*c**2*e_0*rho_t*s_t**6*sigma**2/(2*eta1*eta4) - c**2*e_0*rho_t*s_t**6*sigma/(eta1*eta4) + c**2*e_0*rho_t*s_t**6/(6*eta1*eta4) - c**2*rho_t*s_t**6*sigma**6/(24*eta1*eta4) + c**2*rho_t*s_t**6*sigma**5/(4*eta1*eta4) - 5*c**2*rho_t*s_t**6*sigma**4/(8*eta1*eta4) + 5*c**2*rho_t*s_t**6*sigma**3/(6*eta1*eta4) - 5*c**2*rho_t*s_t**6*sigma**2/(8*eta1*eta4) + c**2*rho_t*s_t**6*sigma/(4*eta1*eta4) - c**2*rho_t*s_t**6/(24*eta1*eta4), -c**2*e_0*rho_t*s_t**7*sigma**7/(7*eta2*eta4) + c**2*e_0*rho_t*s_t**7*sigma**6/(eta2*eta4) - 3*c**2*e_0*rho_t*s_t**7*sigma**5/(eta2*eta4) + 5*c**2*e_0*rho_t*s_t**7*sigma**4/(eta2*eta4) - 5*c**2*e_0*rho_t*s_t**7*sigma**3/(eta2*eta4) + 3*c**2*e_0*rho_t*s_t**7*sigma**2/(eta2*eta4) - c**2*e_0*rho_t*s_t**7*sigma/(eta2*eta4) + c**2*e_0*rho_t*s_t**7/(7*eta2*eta4) + c**2*rho_t*s_t**7*sigma**7/(28*eta2*eta4) - c**2*rho_t*s_t**7*sigma**6/(4*eta2*eta4) + 3*c**2*rho_t*s_t**7*sigma**5/(4*eta2*eta4) - 5*c**2*rho_t*s_t**7*sigma**4/(4*eta2*eta4) + 5*c**2*rho_t*s_t**7*sigma**3/(4*eta2*eta4) - 3*c**2*rho_t*s_t**7*sigma**2/(4*eta2*eta4) + c**2*rho_t*s_t**7*sigma/(4*eta2*eta4) - c**2*rho_t*s_t**7/(28*eta2*eta4), c**3*e_0**2*rho_t*s_t**4*sigma**4/(4*eta3*eta4) - c**3*e_0**2*rho_t*s_t**4*sigma**3/(eta3*eta4) + 3*c**3*e_0**2*rho_t*s_t**4*sigma**2/(2*eta3*eta4) - c**3*e_0**2*rho_t*s_t**4*sigma/(eta3*eta4) + c**3*e_0**2*rho_t*s_t**4/(4*eta3*eta4) - c**3*e_0*rho_t*s_t**4*sigma**4/(8*eta3*eta4) + c**3*e_0*rho_t*s_t**4*sigma**3/(2*eta3*eta4) - 3*c**3*e_0*rho_t*s_t**4*sigma**2/(4*eta3*eta4) + c**3*e_0*rho_t*s_t**4*sigma/(2*eta3*eta4) - c**3*e_0*rho_t*s_t**4/(8*eta3*eta4) + 7*c**3*rho_t*s_t**4*sigma**4/(192*eta3*eta4) - 7*c**3*rho_t*s_t**4*sigma**3/(48*eta3*eta4) + 7*c**3*rho_t*s_t**4*sigma**2/(32*eta3*eta4) - 7*c**3*rho_t*s_t**4*sigma/(48*eta3*eta4) + 7*c**3*rho_t*s_t**4/(192*eta3*eta4), -c**3*e_0**2*rho_t*s_t**5*sigma**5/(5*eta4**2) + c**3*e_0**2*rho_t*s_t**5*sigma**4/eta4**2 - 2*c**3*e_0**2*rho_t*s_t**5*sigma**3/eta4**2 + 2*c**3*e_0**2*rho_t*s_t**5*sigma**2/eta4**2 - c**3*e_0**2*rho_t*s_t**5*sigma/eta4**2 + c**3*e_0**2*rho_t*s_t**5/(5*eta4**2) + c**3*e_0*rho_t*s_t**5*sigma**5/(10*eta4**2) - c**3*e_0*rho_t*s_t**5*sigma**4/(2*eta4**2) + c**3*e_0*rho_t*s_t**5*sigma**3/eta4**2 - c**3*e_0*rho_t*s_t**5*sigma**2/eta4**2 + c**3*e_0*rho_t*s_t**5*sigma/(2*eta4**2) - c**3*e_0*rho_t*s_t**5/(10*eta4**2) - 7*c**3*rho_t*s_t**5*sigma**5/(240*eta4**2) + 7*c**3*rho_t*s_t**5*sigma**4/(48*eta4**2) - 7*c**3*rho_t*s_t**5*sigma**3/(24*eta4**2) + 7*c**3*rho_t*s_t**5*sigma**2/(24*eta4**2) - 7*c**3*rho_t*s_t**5*sigma/(48*eta4**2) + 7*c**3*rho_t*s_t**5/(240*eta4**2), c**3*e_0**2*rho_t*s_t**6*sigma**6/(6*eta4*eta5) - c**3*e_0**2*rho_t*s_t**6*sigma**5/(eta4*eta5) + 5*c**3*e_0**2*rho_t*s_t**6*sigma**4/(2*eta4*eta5) - 10*c**3*e_0**2*rho_t*s_t**6*sigma**3/(3*eta4*eta5) + 5*c**3*e_0**2*rho_t*s_t**6*sigma**2/(2*eta4*eta5) - c**3*e_0**2*rho_t*s_t**6*sigma/(eta4*eta5) + c**3*e_0**2*rho_t*s_t**6/(6*eta4*eta5) - c**3*e_0*rho_t*s_t**6*sigma**6/(12*eta4*eta5) + c**3*e_0*rho_t*s_t**6*sigma**5/(2*eta4*eta5) - 5*c**3*e_0*rho_t*s_t**6*sigma**4/(4*eta4*eta5) + 5*c**3*e_0*rho_t*s_t**6*sigma**3/(3*eta4*eta5) - 5*c**3*e_0*rho_t*s_t**6*sigma**2/(4*eta4*eta5) + c**3*e_0*rho_t*s_t**6*sigma/(2*eta4*eta5) - c**3*e_0*rho_t*s_t**6/(12*eta4*eta5) + 7*c**3*rho_t*s_t**6*sigma**6/(288*eta4*eta5) - 7*c**3*rho_t*s_t**6*sigma**5/(48*eta4*eta5) + 35*c**3*rho_t*s_t**6*sigma**4/(96*eta4*eta5) - 35*c**3*rho_t*s_t**6*sigma**3/(72*eta4*eta5) + 35*c**3*rho_t*s_t**6*sigma**2/(96*eta4*eta5) - 7*c**3*rho_t*s_t**6*sigma/(48*eta4*eta5) + 7*c**3*rho_t*s_t**6/(288*eta4*eta5), 0], [c**2*e_0*rho_t*s_t**6*sigma**6/(6*eta0*eta5) - c**2*e_0*rho_t*s_t**6*sigma**5/(eta0*eta5) + 5*c**2*e_0*rho_t*s_t**6*sigma**4/(2*eta0*eta5) - 10*c**2*e_0*rho_t*s_t**6*sigma**3/(3*eta0*eta5) + 5*c**2*e_0*rho_t*s_t**6*sigma**2/(2*eta0*eta5) - c**2*e_0*rho_t*s_t**6*sigma/(eta0*eta5) + c**2*e_0*rho_t*s_t**6/(6*eta0*eta5) - c**2*rho_t*s_t**6*sigma**6/(24*eta0*eta5) + c**2*rho_t*s_t**6*sigma**5/(4*eta0*eta5) - 5*c**2*rho_t*s_t**6*sigma**4/(8*eta0*eta5) + 5*c**2*rho_t*s_t**6*sigma**3/(6*eta0*eta5) - 5*c**2*rho_t*s_t**6*sigma**2/(8*eta0*eta5) + c**2*rho_t*s_t**6*sigma/(4*eta0*eta5) - c**2*rho_t*s_t**6/(24*eta0*eta5), -c**2*e_0*rho_t*s_t**7*sigma**7/(7*eta1*eta5) + c**2*e_0*rho_t*s_t**7*sigma**6/(eta1*eta5) - 3*c**2*e_0*rho_t*s_t**7*sigma**5/(eta1*eta5) + 5*c**2*e_0*rho_t*s_t**7*sigma**4/(eta1*eta5) - 5*c**2*e_0*rho_t*s_t**7*sigma**3/(eta1*eta5) + 3*c**2*e_0*rho_t*s_t**7*sigma**2/(eta1*eta5) - c**2*e_0*rho_t*s_t**7*sigma/(eta1*eta5) + c**2*e_0*rho_t*s_t**7/(7*eta1*eta5) + c**2*rho_t*s_t**7*sigma**7/(28*eta1*eta5) - c**2*rho_t*s_t**7*sigma**6/(4*eta1*eta5) + 3*c**2*rho_t*s_t**7*sigma**5/(4*eta1*eta5) - 5*c**2*rho_t*s_t**7*sigma**4/(4*eta1*eta5) + 5*c**2*rho_t*s_t**7*sigma**3/(4*eta1*eta5) - 3*c**2*rho_t*s_t**7*sigma**2/(4*eta1*eta5) + c**2*rho_t*s_t**7*sigma/(4*eta1*eta5) - c**2*rho_t*s_t**7/(28*eta1*eta5), c**2*e_0*rho_t*s_t**8*sigma**8/(8*eta2*eta5) - c**2*e_0*rho_t*s_t**8*sigma**7/(eta2*eta5) + 7*c**2*e_0*rho_t*s_t**8*sigma**6/(2*eta2*eta5) - 7*c**2*e_0*rho_t*s_t**8*sigma**5/(eta2*eta5) + 35*c**2*e_0*rho_t*s_t**8*sigma**4/(4*eta2*eta5) - 7*c**2*e_0*rho_t*s_t**8*sigma**3/(eta2*eta5) + 7*c**2*e_0*rho_t*s_t**8*sigma**2/(2*eta2*eta5) - c**2*e_0*rho_t*s_t**8*sigma/(eta2*eta5) + c**2*e_0*rho_t*s_t**8/(8*eta2*eta5) - c**2*rho_t*s_t**8*sigma**8/(32*eta2*eta5) + c**2*rho_t*s_t**8*sigma**7/(4*eta2*eta5) - 7*c**2*rho_t*s_t**8*sigma**6/(8*eta2*eta5) + 7*c**2*rho_t*s_t**8*sigma**5/(4*eta2*eta5) - 35*c**2*rho_t*s_t**8*sigma**4/(16*eta2*eta5) + 7*c**2*rho_t*s_t**8*sigma**3/(4*eta2*eta5) - 7*c**2*rho_t*s_t**8*sigma**2/(8*eta2*eta5) + c**2*rho_t*s_t**8*sigma/(4*eta2*eta5) - c**2*rho_t*s_t**8/(32*eta2*eta5), -c**3*e_0**2*rho_t*s_t**5*sigma**5/(5*eta3*eta5) + c**3*e_0**2*rho_t*s_t**5*sigma**4/(eta3*eta5) - 2*c**3*e_0**2*rho_t*s_t**5*sigma**3/(eta3*eta5) + 2*c**3*e_0**2*rho_t*s_t**5*sigma**2/(eta3*eta5) - c**3*e_0**2*rho_t*s_t**5*sigma/(eta3*eta5) + c**3*e_0**2*rho_t*s_t**5/(5*eta3*eta5) + c**3*e_0*rho_t*s_t**5*sigma**5/(10*eta3*eta5) - c**3*e_0*rho_t*s_t**5*sigma**4/(2*eta3*eta5) + c**3*e_0*rho_t*s_t**5*sigma**3/(eta3*eta5) - c**3*e_0*rho_t*s_t**5*sigma**2/(eta3*eta5) + c**3*e_0*rho_t*s_t**5*sigma/(2*eta3*eta5) - c**3*e_0*rho_t*s_t**5/(10*eta3*eta5) - 7*c**3*rho_t*s_t**5*sigma**5/(240*eta3*eta5) + 7*c**3*rho_t*s_t**5*sigma**4/(48*eta3*eta5) - 7*c**3*rho_t*s_t**5*sigma**3/(24*eta3*eta5) + 7*c**3*rho_t*s_t**5*sigma**2/(24*eta3*eta5) - 7*c**3*rho_t*s_t**5*sigma/(48*eta3*eta5) + 7*c**3*rho_t*s_t**5/(240*eta3*eta5), c**3*e_0**2*rho_t*s_t**6*sigma**6/(6*eta4*eta5) - c**3*e_0**2*rho_t*s_t**6*sigma**5/(eta4*eta5) + 5*c**3*e_0**2*rho_t*s_t**6*sigma**4/(2*eta4*eta5) - 10*c**3*e_0**2*rho_t*s_t**6*sigma**3/(3*eta4*eta5) + 5*c**3*e_0**2*rho_t*s_t**6*sigma**2/(2*eta4*eta5) - c**3*e_0**2*rho_t*s_t**6*sigma/(eta4*eta5) + c**3*e_0**2*rho_t*s_t**6/(6*eta4*eta5) - c**3*e_0*rho_t*s_t**6*sigma**6/(12*eta4*eta5) + c**3*e_0*rho_t*s_t**6*sigma**5/(2*eta4*eta5) - 5*c**3*e_0*rho_t*s_t**6*sigma**4/(4*eta4*eta5) + 5*c**3*e_0*rho_t*s_t**6*sigma**3/(3*eta4*eta5) - 5*c**3*e_0*rho_t*s_t**6*sigma**2/(4*eta4*eta5) + c**3*e_0*rho_t*s_t**6*sigma/(2*eta4*eta5) - c**3*e_0*rho_t*s_t**6/(12*eta4*eta5) + 7*c**3*rho_t*s_t**6*sigma**6/(288*eta4*eta5) - 7*c**3*rho_t*s_t**6*sigma**5/(48*eta4*eta5) + 35*c**3*rho_t*s_t**6*sigma**4/(96*eta4*eta5) - 35*c**3*rho_t*s_t**6*sigma**3/(72*eta4*eta5) + 35*c**3*rho_t*s_t**6*sigma**2/(96*eta4*eta5) - 7*c**3*rho_t*s_t**6*sigma/(48*eta4*eta5) + 7*c**3*rho_t*s_t**6/(288*eta4*eta5), -c**3*e_0**2*rho_t*s_t**7*sigma**7/(7*eta5**2) + c**3*e_0**2*rho_t*s_t**7*sigma**6/eta5**2 - 3*c**3*e_0**2*rho_t*s_t**7*sigma**5/eta5**2 + 5*c**3*e_0**2*rho_t*s_t**7*sigma**4/eta5**2 - 5*c**3*e_0**2*rho_t*s_t**7*sigma**3/eta5**2 + 3*c**3*e_0**2*rho_t*s_t**7*sigma**2/eta5**2 - c**3*e_0**2*rho_t*s_t**7*sigma/eta5**2 + c**3*e_0**2*rho_t*s_t**7/(7*eta5**2) + c**3*e_0*rho_t*s_t**7*sigma**7/(14*eta5**2) - c**3*e_0*rho_t*s_t**7*sigma**6/(2*eta5**2) + 3*c**3*e_0*rho_t*s_t**7*sigma**5/(2*eta5**2) - 5*c**3*e_0*rho_t*s_t**7*sigma**4/(2*eta5**2) + 5*c**3*e_0*rho_t*s_t**7*sigma**3/(2*eta5**2) - 3*c**3*e_0*rho_t*s_t**7*sigma**2/(2*eta5**2) + c**3*e_0*rho_t*s_t**7*sigma/(2*eta5**2) - c**3*e_0*rho_t*s_t**7/(14*eta5**2) - c**3*rho_t*s_t**7*sigma**7/(48*eta5**2) + 7*c**3*rho_t*s_t**7*sigma**6/(48*eta5**2) - 7*c**3*rho_t*s_t**7*sigma**5/(16*eta5**2) + 35*c**3*rho_t*s_t**7*sigma**4/(48*eta5**2) - 35*c**3*rho_t*s_t**7*sigma**3/(48*eta5**2) + 7*c**3*rho_t*s_t**7*sigma**2/(16*eta5**2) - 7*c**3*rho_t*s_t**7*sigma/(48*eta5**2) + c**3*rho_t*s_t**7/(48*eta5**2), 0], [-c*delta_m*rho_t*s_t**4*sigma**4/(2*eta0) + c*delta_m*rho_t*s_t**4*sigma**3/eta0 - c*delta_m*rho_t*s_t**4*sigma**2/(2*eta0), c*delta_m*rho_t*s_t**5*sigma**5/(2*eta1) - 3*c*delta_m*rho_t*s_t**5*sigma**4/(2*eta1) + 3*c*delta_m*rho_t*s_t**5*sigma**3/(2*eta1) - c*delta_m*rho_t*s_t**5*sigma**2/(2*eta1), -c*delta_m*rho_t*s_t**6*sigma**6/(2*eta2) + 2*c*delta_m*rho_t*s_t**6*sigma**5/eta2 - 3*c*delta_m*rho_t*s_t**6*sigma**4/eta2 + 2*c*delta_m*rho_t*s_t**6*sigma**3/eta2 - c*delta_m*rho_t*s_t**6*sigma**2/(2*eta2), 0, 0, 0, c*delta_m*rho_t*s_t**3*sigma**3/3]])
	return e
def get_f():
	EI = Symbol('EI')
	s_t = Symbol('s_t')
	sigma = Symbol('sigma')
	t = Symbol('t')
	eta0 = Symbol('eta0')
	eta2 = Symbol('eta2')
	eta1 = Symbol('eta1')
	c = Symbol('c')
	delta_m = Symbol('delta_m')
	g = Symbol('g')
	rho_t = Symbol('rho_t')
	alpha_r = Symbol('alpha_r')
	GJ = Symbol('GJ')
	eta3 = Symbol('eta3')
	eta5 = Symbol('eta5')
	eta4 = Symbol('eta4')
	e_0 = Symbol('e_0')
	q2 = Function('q2')
	q1 = Function('q1')
	q0 = Function('q0')
	q5 = Function('q5')
	q4 = Function('q4')
	q3 = Function('q3')
	e = ImmutableDenseMatrix([[-8*EI*s_t**3*sigma**3*q2(t)/(eta0*eta2) + 24*EI*s_t**3*sigma**2*q2(t)/(eta0*eta2) - 24*EI*s_t**3*sigma*q2(t)/(eta0*eta2) + 8*EI*s_t**3*q2(t)/(eta0*eta2) + 6*EI*s_t**2*sigma**2*q1(t)/(eta0*eta1) - 12*EI*s_t**2*sigma*q1(t)/(eta0*eta1) + 6*EI*s_t**2*q1(t)/(eta0*eta1) - 4*EI*s_t*sigma*q0(t)/eta0**2 + 4*EI*s_t*q0(t)/eta0**2 + c*delta_m*g*rho_t*s_t**3*sigma**3*cos(alpha_r)/eta0 - 2*c*delta_m*g*rho_t*s_t**3*sigma**2*cos(alpha_r)/eta0 + c*delta_m*g*rho_t*s_t**3*sigma*cos(alpha_r)/eta0 - c*g*rho_t*s_t**3*sigma**3*cos(alpha_r)/(3*eta0) + c*g*rho_t*s_t**3*sigma**2*cos(alpha_r)/eta0 - c*g*rho_t*s_t**3*sigma*cos(alpha_r)/eta0 + c*g*rho_t*s_t**3*cos(alpha_r)/(3*eta0)], [18*EI*s_t**4*sigma**4*q2(t)/(eta1*eta2) - 72*EI*s_t**4*sigma**3*q2(t)/(eta1*eta2) + 108*EI*s_t**4*sigma**2*q2(t)/(eta1*eta2) - 72*EI*s_t**4*sigma*q2(t)/(eta1*eta2) + 18*EI*s_t**4*q2(t)/(eta1*eta2) - 12*EI*s_t**3*sigma**3*q1(t)/eta1**2 + 36*EI*s_t**3*sigma**2*q1(t)/eta1**2 - 36*EI*s_t**3*sigma*q1(t)/eta1**2 + 12*EI*s_t**3*q1(t)/eta1**2 + 6*EI*s_t**2*sigma**2*q0(t)/(eta0*eta1) - 12*EI*s_t**2*sigma*q0(t)/(eta0*eta1) + 6*EI*s_t**2*q0(t)/(eta0*eta1) - c*delta_m*g*rho_t*s_t**4*sigma**4*cos(alpha_r)/eta1 + 3*c*delta_m*g*rho_t*s_t**4*sigma**3*cos(alpha_r)/eta1 - 3*c*delta_m*g*rho_t*s_t**4*sigma**2*cos(alpha_r)/eta1 + c*delta_m*g*rho_t*s_t**4*sigma*cos(alpha_r)/eta1 + c*g*rho_t*s_t**4*sigma**4*cos(alpha_r)/(4*eta1) - c*g*rho_t*s_t**4*sigma**3*cos(alpha_r)/eta1 + 3*c*g*rho_t*s_t**4*sigma**2*cos(alpha_r)/(2*eta1) - c*g*rho_t*s_t**4*sigma*cos(alpha_r)/eta1 + c*g*rho_t*s_t**4*cos(alpha_r)/(4*eta1)], [-144*EI*s_t**5*sigma**5*q2(t)/(5*eta2**2) + 144*EI*s_t**5*sigma**4*q2(t)/eta2**2 - 288*EI*s_t**5*sigma**3*q2(t)/eta2**2 + 288*EI*s_t**5*sigma**2*q2(t)/eta2**2 - 144*EI*s_t**5*sigma*q2(t)/eta2**2 + 144*EI*s_t**5*q2(t)/(5*eta2**2) + 18*EI*s_t**4*sigma**4*q1(t)/(eta1*eta2) - 72*EI*s_t**4*sigma**3*q1(t)/(eta1*eta2) + 108*EI*s_t**4*sigma**2*q1(t)/(eta1*eta2) - 72*EI*s_t**4*sigma*q1(t)/(eta1*eta2) + 18*EI*s_t**4*q1(t)/(eta1*eta2) - 8*EI*s_t**3*sigma**3*q0(t)/(eta0*eta2) + 24*EI*s_t**3*sigma**2*q0(t)/(eta0*eta2) - 24*EI*s_t**3*sigma*q0(t)/(eta0*eta2) + 8*EI*s_t**3*q0(t)/(eta0*eta2) + c*delta_m*g*rho_t*s_t**5*sigma**5*cos(alpha_r)/eta2 - 4*c*delta_m*g*rho_t*s_t**5*sigma**4*cos(alpha_r)/eta2 + 6*c*delta_m*g*rho_t*s_t**5*sigma**3*cos(alpha_r)/eta2 - 4*c*delta_m*g*rho_t*s_t**5*sigma**2*cos(alpha_r)/eta2 + c*delta_m*g*rho_t*s_t**5*sigma*cos(alpha_r)/eta2 - c*g*rho_t*s_t**5*sigma**5*cos(alpha_r)/(5*eta2) + c*g*rho_t*s_t**5*sigma**4*cos(alpha_r)/eta2 - 2*c*g*rho_t*s_t**5*sigma**3*cos(alpha_r)/eta2 + 2*c*g*rho_t*s_t**5*sigma**2*cos(alpha_r)/eta2 - c*g*rho_t*s_t**5*sigma*cos(alpha_r)/eta2 + c*g*rho_t*s_t**5*cos(alpha_r)/(5*eta2)], [-GJ*s_t**3*sigma**3*q5(t)/(eta3*eta5) + 3*GJ*s_t**3*sigma**2*q5(t)/(eta3*eta5) - 3*GJ*s_t**3*sigma*q5(t)/(eta3*eta5) + GJ*s_t**3*q5(t)/(eta3*eta5) + GJ*s_t**2*sigma**2*q4(t)/(eta3*eta4) - 2*GJ*s_t**2*sigma*q4(t)/(eta3*eta4) + GJ*s_t**2*q4(t)/(eta3*eta4) - GJ*s_t*sigma*q3(t)/eta3**2 + GJ*s_t*q3(t)/eta3**2 + c**2*e_0*g*rho_t*s_t**2*sigma**2*cos(alpha_r)/(2*eta3) - c**2*e_0*g*rho_t*s_t**2*sigma*cos(alpha_r)/eta3 + c**2*e_0*g*rho_t*s_t**2*cos(alpha_r)/(2*eta3) - c**2*g*rho_t*s_t**2*sigma**2*cos(alpha_r)/(8*eta3) + c**2*g*rho_t*s_t**2*sigma*cos(alpha_r)/(4*eta3) - c**2*g*rho_t*s_t**2*cos(alpha_r)/(8*eta3)], [3*GJ*s_t**4*sigma**4*q5(t)/(2*eta4*eta5) - 6*GJ*s_t**4*sigma**3*q5(t)/(eta4*eta5) + 9*GJ*s_t**4*sigma**2*q5(t)/(eta4*eta5) - 6*GJ*s_t**4*sigma*q5(t)/(eta4*eta5) + 3*GJ*s_t**4*q5(t)/(2*eta4*eta5) - 4*GJ*s_t**3*sigma**3*q4(t)/(3*eta4**2) + 4*GJ*s_t**3*sigma**2*q4(t)/eta4**2 - 4*GJ*s_t**3*sigma*q4(t)/eta4**2 + 4*GJ*s_t**3*q4(t)/(3*eta4**2) + GJ*s_t**2*sigma**2*q3(t)/(eta3*eta4) - 2*GJ*s_t**2*sigma*q3(t)/(eta3*eta4) + GJ*s_t**2*q3(t)/(eta3*eta4) - c**2*e_0*g*rho_t*s_t**3*sigma**3*cos(alpha_r)/(3*eta4) + c**2*e_0*g*rho_t*s_t**3*sigma**2*cos(alpha_r)/eta4 - c**2*e_0*g*rho_t*s_t**3*sigma*cos(alpha_r)/eta4 + c**2*e_0*g*rho_t*s_t**3*cos(alpha_r)/(3*eta4) + c**2*g*rho_t*s_t**3*sigma**3*cos(alpha_r)/(12*eta4) - c**2*g*rho_t*s_t**3*sigma**2*cos(alpha_r)/(4*eta4) + c**2*g*rho_t*s_t**3*sigma*cos(alpha_r)/(4*eta4) - c**2*g*rho_t*s_t**3*cos(alpha_r)/(12*eta4)], [-9*GJ*s_t**5*sigma**5*q5(t)/(5*eta5**2) + 9*GJ*s_t**5*sigma**4*q5(t)/eta5**2 - 18*GJ*s_t**5*sigma**3*q5(t)/eta5**2 + 18*GJ*s_t**5*sigma**2*q5(t)/eta5**2 - 9*GJ*s_t**5*sigma*q5(t)/eta5**2 + 9*GJ*s_t**5*q5(t)/(5*eta5**2) + 3*GJ*s_t**4*sigma**4*q4(t)/(2*eta4*eta5) - 6*GJ*s_t**4*sigma**3*q4(t)/(eta4*eta5) + 9*GJ*s_t**4*sigma**2*q4(t)/(eta4*eta5) - 6*GJ*s_t**4*sigma*q4(t)/(eta4*eta5) + 3*GJ*s_t**4*q4(t)/(2*eta4*eta5) - GJ*s_t**3*sigma**3*q3(t)/(eta3*eta5) + 3*GJ*s_t**3*sigma**2*q3(t)/(eta3*eta5) - 3*GJ*s_t**3*sigma*q3(t)/(eta3*eta5) + GJ*s_t**3*q3(t)/(eta3*eta5) + c**2*e_0*g*rho_t*s_t**4*sigma**4*cos(alpha_r)/(4*eta5) - c**2*e_0*g*rho_t*s_t**4*sigma**3*cos(alpha_r)/eta5 + 3*c**2*e_0*g*rho_t*s_t**4*sigma**2*cos(alpha_r)/(2*eta5) - c**2*e_0*g*rho_t*s_t**4*sigma*cos(alpha_r)/eta5 + c**2*e_0*g*rho_t*s_t**4*cos(alpha_r)/(4*eta5) - c**2*g*rho_t*s_t**4*sigma**4*cos(alpha_r)/(16*eta5) + c**2*g*rho_t*s_t**4*sigma**3*cos(alpha_r)/(4*eta5) - 3*c**2*g*rho_t*s_t**4*sigma**2*cos(alpha_r)/(8*eta5) + c**2*g*rho_t*s_t**4*sigma*cos(alpha_r)/(4*eta5) - c**2*g*rho_t*s_t**4*cos(alpha_r)/(16*eta5)], [-c*delta_m*g*rho_t*s_t**2*sigma**2*cos(alpha_r)/2]])
	return e
def get_T():
	e = 0
	return e
def get_U():
	e = 0
	return e
def get_Q():
	V = Symbol('V')
	a_0 = Symbol('a_0')
	alpha_r = Symbol('alpha_r')
	c = Symbol('c')
	rho = Symbol('rho')
	s_t = Symbol('s_t')
	sigma = Symbol('sigma')
	eta0 = Symbol('eta0')
	t = Symbol('t')
	eta5 = Symbol('eta5')
	eta4 = Symbol('eta4')
	eta3 = Symbol('eta3')
	Lambda = Symbol('Lambda')
	eta2 = Symbol('eta2')
	eta1 = Symbol('eta1')
	M_thetadot = Symbol('M_thetadot')
	e_0 = Symbol('e_0')
	q5 = Function('q5')
	q4 = Function('q4')
	q3 = Function('q3')
	q2 = Function('q2')
	q1 = Function('q1')
	q0 = Function('q0')
	q6 = Function('q6')
	e = ImmutableDenseMatrix([[V**2*a_0*alpha_r*c*rho*s_t**3*(1 - sigma)**3/(6*eta0) + V**2*a_0*c*rho*s_t**6*(1 - sigma)**6*q5(t)/(12*eta0*eta5) + V**2*a_0*c*rho*s_t**5*(1 - sigma)**5*q4(t)/(10*eta0*eta4) + V**2*a_0*c*rho*s_t**4*(1 - sigma)**4*q3(t)/(8*eta0*eta3) + V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V*a_0*c*rho*s_t**7*(1 - sigma)**7*Derivative(q2(t), t)/(14*eta0*eta2) - V*a_0*c*rho*s_t**6*(1 - sigma)**6*Derivative(q1(t), t)/(12*eta0*eta1) - V*a_0*c*rho*s_t**5*(1 - sigma)**5*Derivative(q0(t), t)/(10*eta0**2) + (17*V*a_0*c*rho*s_t**4*sigma**2*(sigma - 1)**2/(200*eta0*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - 17*V*a_0*c*rho*s_t**4*sigma**2*(sigma - 1)**2*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta0*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q6(t), t) + (-V*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4/(4*eta0**2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + V*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0**2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q0(t), t) + (V*a_0*c*rho*s_t**6*sigma*(sigma - 1)**5/(4*eta0*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V*a_0*c*rho*s_t**6*sigma*(sigma - 1)**5*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q1(t), t) + (-V*a_0*c*rho*s_t**7*sigma*(sigma - 1)**6/(4*eta0*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + V*a_0*c*rho*s_t**7*sigma*(sigma - 1)**6*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q2(t), t) + (V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*(sin(Lambda)/(sin(Lambda)**2 + cos(Lambda)**2) + sin(Lambda)*sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta0*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) - V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*(sin(Lambda)/(sin(Lambda)**2 + cos(Lambda)**2) + sin(Lambda)*sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q6(t) + (V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*(-2*s_t*(1 - sigma)*sin(Lambda)/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)) - 2*s_t*(1 - sigma)*sin(Lambda)*sin(alpha_r)**2/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta0*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) - V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*(-2*s_t*(1 - sigma)*sin(Lambda)/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)) - 2*s_t*(1 - sigma)*sin(Lambda)*sin(alpha_r)**2/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q0(t) + (V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*(-3*s_t**2*(1 - sigma)**2*sin(Lambda)/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)) - 3*s_t**2*(1 - sigma)**2*sin(Lambda)*sin(alpha_r)**2/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta0*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) - V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*(-3*s_t**2*(1 - sigma)**2*sin(Lambda)/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)) - 3*s_t**2*(1 - sigma)**2*sin(Lambda)*sin(alpha_r)**2/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q1(t) + (V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*(-4*s_t**3*(1 - sigma)**3*sin(Lambda)/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)) - 4*s_t**3*(1 - sigma)**3*sin(Lambda)*sin(alpha_r)**2/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta0*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) - V**2*a_0*c*rho*s_t**3*sigma*(sigma - 1)**2*(-4*s_t**3*(1 - sigma)**3*sin(Lambda)/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)) - 4*s_t**3*(1 - sigma)**3*sin(Lambda)*sin(alpha_r)**2/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q2(t) + (V**2*a_0*c*rho*s_t**4*sigma*(1 - sigma)*(sigma - 1)**2/(4*eta0*eta3*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V**2*a_0*c*rho*s_t**4*sigma*(1 - sigma)*(sigma - 1)**2*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*eta3*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q3(t) + (V**2*a_0*c*rho*s_t**5*sigma*(1 - sigma)**2*(sigma - 1)**2/(4*eta0*eta4*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V**2*a_0*c*rho*s_t**5*sigma*(1 - sigma)**2*(sigma - 1)**2*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*eta4*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q4(t) + (V**2*a_0*c*rho*s_t**6*sigma*(1 - sigma)**3*(sigma - 1)**2/(4*eta0*eta5*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V**2*a_0*c*rho*s_t**6*sigma*(1 - sigma)**3*(sigma - 1)**2*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*eta5*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q5(t)], [V**2*a_0*alpha_r*c*rho*s_t**4*(1 - sigma)**4/(8*eta1) + V**2*a_0*c*rho*s_t**7*(1 - sigma)**7*q5(t)/(14*eta1*eta5) + V**2*a_0*c*rho*s_t**6*(1 - sigma)**6*q4(t)/(12*eta1*eta4) + V**2*a_0*c*rho*s_t**5*(1 - sigma)**5*q3(t)/(10*eta1*eta3) - V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V*a_0*c*rho*s_t**8*(1 - sigma)**8*Derivative(q2(t), t)/(16*eta1*eta2) - V*a_0*c*rho*s_t**7*(1 - sigma)**7*Derivative(q1(t), t)/(14*eta1**2) - V*a_0*c*rho*s_t**6*(1 - sigma)**6*Derivative(q0(t), t)/(12*eta0*eta1) + (-17*V*a_0*c*rho*s_t**5*sigma**2*(sigma - 1)**3/(200*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + 17*V*a_0*c*rho*s_t**5*sigma**2*(sigma - 1)**3*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q6(t), t) + (-V*a_0*c*rho*s_t**7*sigma*(sigma - 1)**6/(4*eta1**2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + V*a_0*c*rho*s_t**7*sigma*(sigma - 1)**6*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1**2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q1(t), t) + (V*a_0*c*rho*s_t**6*sigma*(sigma - 1)**5/(4*eta0*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V*a_0*c*rho*s_t**6*sigma*(sigma - 1)**5*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q0(t), t) + (V*a_0*c*rho*s_t**8*sigma*(sigma - 1)**7/(4*eta1*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V*a_0*c*rho*s_t**8*sigma*(sigma - 1)**7*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q2(t), t) + (-V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*(sin(Lambda)/(sin(Lambda)**2 + cos(Lambda)**2) + sin(Lambda)*sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta1*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) + V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*(sin(Lambda)/(sin(Lambda)**2 + cos(Lambda)**2) + sin(Lambda)*sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q6(t) + (-V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*(-2*s_t*(1 - sigma)*sin(Lambda)/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)) - 2*s_t*(1 - sigma)*sin(Lambda)*sin(alpha_r)**2/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta1*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) + V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*(-2*s_t*(1 - sigma)*sin(Lambda)/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)) - 2*s_t*(1 - sigma)*sin(Lambda)*sin(alpha_r)**2/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q0(t) + (-V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*(-3*s_t**2*(1 - sigma)**2*sin(Lambda)/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)) - 3*s_t**2*(1 - sigma)**2*sin(Lambda)*sin(alpha_r)**2/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta1*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) + V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*(-3*s_t**2*(1 - sigma)**2*sin(Lambda)/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)) - 3*s_t**2*(1 - sigma)**2*sin(Lambda)*sin(alpha_r)**2/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q1(t) + (-V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*(-4*s_t**3*(1 - sigma)**3*sin(Lambda)/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)) - 4*s_t**3*(1 - sigma)**3*sin(Lambda)*sin(alpha_r)**2/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta1*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) + V**2*a_0*c*rho*s_t**4*sigma*(sigma - 1)**3*(-4*s_t**3*(1 - sigma)**3*sin(Lambda)/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)) - 4*s_t**3*(1 - sigma)**3*sin(Lambda)*sin(alpha_r)**2/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q2(t) + (-V**2*a_0*c*rho*s_t**5*sigma*(1 - sigma)*(sigma - 1)**3/(4*eta1*eta3*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + V**2*a_0*c*rho*s_t**5*sigma*(1 - sigma)*(sigma - 1)**3*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*eta3*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q3(t) + (-V**2*a_0*c*rho*s_t**6*sigma*(1 - sigma)**2*(sigma - 1)**3/(4*eta1*eta4*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + V**2*a_0*c*rho*s_t**6*sigma*(1 - sigma)**2*(sigma - 1)**3*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*eta4*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q4(t) + (-V**2*a_0*c*rho*s_t**7*sigma*(1 - sigma)**3*(sigma - 1)**3/(4*eta1*eta5*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + V**2*a_0*c*rho*s_t**7*sigma*(1 - sigma)**3*(sigma - 1)**3*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*eta5*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q5(t)], [V**2*a_0*alpha_r*c*rho*s_t**5*(1 - sigma)**5/(10*eta2) + V**2*a_0*c*rho*s_t**8*(1 - sigma)**8*q5(t)/(16*eta2*eta5) + V**2*a_0*c*rho*s_t**7*(1 - sigma)**7*q4(t)/(14*eta2*eta4) + V**2*a_0*c*rho*s_t**6*(1 - sigma)**6*q3(t)/(12*eta2*eta3) + V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V*a_0*c*rho*s_t**9*(1 - sigma)**9*Derivative(q2(t), t)/(18*eta2**2) - V*a_0*c*rho*s_t**8*(1 - sigma)**8*Derivative(q1(t), t)/(16*eta1*eta2) - V*a_0*c*rho*s_t**7*(1 - sigma)**7*Derivative(q0(t), t)/(14*eta0*eta2) + (17*V*a_0*c*rho*s_t**6*sigma**2*(sigma - 1)**4/(200*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - 17*V*a_0*c*rho*s_t**6*sigma**2*(sigma - 1)**4*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q6(t), t) + (-V*a_0*c*rho*s_t**9*sigma*(sigma - 1)**8/(4*eta2**2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + V*a_0*c*rho*s_t**9*sigma*(sigma - 1)**8*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2**2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q2(t), t) + (-V*a_0*c*rho*s_t**7*sigma*(sigma - 1)**6/(4*eta0*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + V*a_0*c*rho*s_t**7*sigma*(sigma - 1)**6*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta0*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q0(t), t) + (V*a_0*c*rho*s_t**8*sigma*(sigma - 1)**7/(4*eta1*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V*a_0*c*rho*s_t**8*sigma*(sigma - 1)**7*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta1*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q1(t), t) + (V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*(sin(Lambda)/(sin(Lambda)**2 + cos(Lambda)**2) + sin(Lambda)*sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta2*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) - V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*(sin(Lambda)/(sin(Lambda)**2 + cos(Lambda)**2) + sin(Lambda)*sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q6(t) + (V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*(-2*s_t*(1 - sigma)*sin(Lambda)/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)) - 2*s_t*(1 - sigma)*sin(Lambda)*sin(alpha_r)**2/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta2*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) - V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*(-2*s_t*(1 - sigma)*sin(Lambda)/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)) - 2*s_t*(1 - sigma)*sin(Lambda)*sin(alpha_r)**2/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q0(t) + (V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*(-3*s_t**2*(1 - sigma)**2*sin(Lambda)/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)) - 3*s_t**2*(1 - sigma)**2*sin(Lambda)*sin(alpha_r)**2/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta2*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) - V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*(-3*s_t**2*(1 - sigma)**2*sin(Lambda)/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)) - 3*s_t**2*(1 - sigma)**2*sin(Lambda)*sin(alpha_r)**2/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q1(t) + (V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*(-4*s_t**3*(1 - sigma)**3*sin(Lambda)/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)) - 4*s_t**3*(1 - sigma)**3*sin(Lambda)*sin(alpha_r)**2/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(4*eta2*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) - V**2*a_0*c*rho*s_t**5*sigma*(sigma - 1)**4*(-4*s_t**3*(1 - sigma)**3*sin(Lambda)/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)) - 4*s_t**3*(1 - sigma)**3*sin(Lambda)*sin(alpha_r)**2/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q2(t) + (V**2*a_0*c*rho*s_t**6*sigma*(1 - sigma)*(sigma - 1)**4/(4*eta2*eta3*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V**2*a_0*c*rho*s_t**6*sigma*(1 - sigma)*(sigma - 1)**4*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2*eta3*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q3(t) + (V**2*a_0*c*rho*s_t**7*sigma*(1 - sigma)**2*(sigma - 1)**4/(4*eta2*eta4*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V**2*a_0*c*rho*s_t**7*sigma*(1 - sigma)**2*(sigma - 1)**4*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2*eta4*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q4(t) + (V**2*a_0*c*rho*s_t**8*sigma*(1 - sigma)**3*(sigma - 1)**4/(4*eta2*eta5*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - V**2*a_0*c*rho*s_t**8*sigma*(1 - sigma)**3*(sigma - 1)**4*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(4*eta2*eta5*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q5(t)], [M_thetadot*V*c**3*rho*s_t**5*(1 - sigma)**5*Derivative(q5(t), t)/(40*eta3*eta5) + M_thetadot*V*c**3*rho*s_t**4*(1 - sigma)**4*Derivative(q4(t), t)/(32*eta3*eta4) + M_thetadot*V*c**3*rho*s_t**3*(1 - sigma)**3*Derivative(q3(t), t)/(24*eta3**2) + V**2*a_0*alpha_r*c**2*e_0*rho*s_t**2*(1 - sigma)**2/(4*eta3) + V**2*a_0*c**2*e_0*rho*s_t**5*(1 - sigma)**5*q5(t)/(10*eta3*eta5) + V**2*a_0*c**2*e_0*rho*s_t**4*(1 - sigma)**4*q4(t)/(8*eta3*eta4) + V**2*a_0*c**2*e_0*rho*s_t**3*(1 - sigma)**3*q3(t)/(6*eta3**2) - V*a_0*c**2*e_0*rho*s_t**6*(1 - sigma)**6*Derivative(q2(t), t)/(12*eta2*eta3) - V*a_0*c**2*e_0*rho*s_t**5*(1 - sigma)**5*Derivative(q1(t), t)/(10*eta1*eta3) - V*a_0*c**2*e_0*rho*s_t**4*(1 - sigma)**4*Derivative(q0(t), t)/(8*eta0*eta3)], [M_thetadot*V*c**3*rho*s_t**6*(1 - sigma)**6*Derivative(q5(t), t)/(48*eta4*eta5) + M_thetadot*V*c**3*rho*s_t**5*(1 - sigma)**5*Derivative(q4(t), t)/(40*eta4**2) + M_thetadot*V*c**3*rho*s_t**4*(1 - sigma)**4*Derivative(q3(t), t)/(32*eta3*eta4) + V**2*a_0*alpha_r*c**2*e_0*rho*s_t**3*(1 - sigma)**3/(6*eta4) + V**2*a_0*c**2*e_0*rho*s_t**6*(1 - sigma)**6*q5(t)/(12*eta4*eta5) + V**2*a_0*c**2*e_0*rho*s_t**5*(1 - sigma)**5*q4(t)/(10*eta4**2) + V**2*a_0*c**2*e_0*rho*s_t**4*(1 - sigma)**4*q3(t)/(8*eta3*eta4) - V*a_0*c**2*e_0*rho*s_t**7*(1 - sigma)**7*Derivative(q2(t), t)/(14*eta2*eta4) - V*a_0*c**2*e_0*rho*s_t**6*(1 - sigma)**6*Derivative(q1(t), t)/(12*eta1*eta4) - V*a_0*c**2*e_0*rho*s_t**5*(1 - sigma)**5*Derivative(q0(t), t)/(10*eta0*eta4)], [M_thetadot*V*c**3*rho*s_t**7*(1 - sigma)**7*Derivative(q5(t), t)/(56*eta5**2) + M_thetadot*V*c**3*rho*s_t**6*(1 - sigma)**6*Derivative(q4(t), t)/(48*eta4*eta5) + M_thetadot*V*c**3*rho*s_t**5*(1 - sigma)**5*Derivative(q3(t), t)/(40*eta3*eta5) + V**2*a_0*alpha_r*c**2*e_0*rho*s_t**4*(1 - sigma)**4/(8*eta5) + V**2*a_0*c**2*e_0*rho*s_t**7*(1 - sigma)**7*q5(t)/(14*eta5**2) + V**2*a_0*c**2*e_0*rho*s_t**6*(1 - sigma)**6*q4(t)/(12*eta4*eta5) + V**2*a_0*c**2*e_0*rho*s_t**5*(1 - sigma)**5*q3(t)/(10*eta3*eta5) - V*a_0*c**2*e_0*rho*s_t**8*(1 - sigma)**8*Derivative(q2(t), t)/(16*eta2*eta5) - V*a_0*c**2*e_0*rho*s_t**7*(1 - sigma)**7*Derivative(q1(t), t)/(14*eta1*eta5) - V*a_0*c**2*e_0*rho*s_t**6*(1 - sigma)**6*Derivative(q0(t), t)/(12*eta0*eta5)], [-17*V**2*a_0*c*rho*s_t**2*sigma**2*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + (-17*V*a_0*c*rho*s_t**3*sigma**3/(400*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + 17*V*a_0*c*rho*s_t**3*sigma**3*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(400*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q6(t), t) + (-17*V**2*a_0*c*rho*s_t**2*sigma**2*(sin(Lambda)/(sin(Lambda)**2 + cos(Lambda)**2) + sin(Lambda)*sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(200*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) + 17*V**2*a_0*c*rho*s_t**2*sigma**2*(sin(Lambda)/(sin(Lambda)**2 + cos(Lambda)**2) + sin(Lambda)*sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q6(t) + (-17*V**2*a_0*c*rho*s_t**2*sigma**2*(-2*s_t*(1 - sigma)*sin(Lambda)/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)) - 2*s_t*(1 - sigma)*sin(Lambda)*sin(alpha_r)**2/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(200*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) + 17*V**2*a_0*c*rho*s_t**2*sigma**2*(-2*s_t*(1 - sigma)*sin(Lambda)/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)) - 2*s_t*(1 - sigma)*sin(Lambda)*sin(alpha_r)**2/(eta0*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q0(t) + (-17*V**2*a_0*c*rho*s_t**2*sigma**2*(-3*s_t**2*(1 - sigma)**2*sin(Lambda)/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)) - 3*s_t**2*(1 - sigma)**2*sin(Lambda)*sin(alpha_r)**2/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(200*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) + 17*V**2*a_0*c*rho*s_t**2*sigma**2*(-3*s_t**2*(1 - sigma)**2*sin(Lambda)/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)) - 3*s_t**2*(1 - sigma)**2*sin(Lambda)*sin(alpha_r)**2/(eta1*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q1(t) + (-17*V**2*a_0*c*rho*s_t**2*sigma**2*(-4*s_t**3*(1 - sigma)**3*sin(Lambda)/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)) - 4*s_t**3*(1 - sigma)**3*sin(Lambda)*sin(alpha_r)**2/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))/(200*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)) + 17*V**2*a_0*c*rho*s_t**2*sigma**2*(-4*s_t**3*(1 - sigma)**3*sin(Lambda)/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)) - 4*s_t**3*(1 - sigma)**3*sin(Lambda)*sin(alpha_r)**2/(eta2*(sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))**Rational(3, 2)*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q2(t) + (17*V*a_0*c*rho*s_t**4*sigma**2*(sigma - 1)**2/(200*eta0*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - 17*V*a_0*c*rho*s_t**4*sigma**2*(sigma - 1)**2*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta0*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q0(t), t) + (-17*V*a_0*c*rho*s_t**5*sigma**2*(sigma - 1)**3/(200*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + 17*V*a_0*c*rho*s_t**5*sigma**2*(sigma - 1)**3*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta1*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q1(t), t) + (17*V*a_0*c*rho*s_t**6*sigma**2*(sigma - 1)**4/(200*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) - 17*V*a_0*c*rho*s_t**6*sigma**2*(sigma - 1)**4*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta2*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*Derivative(q2(t), t) + (-17*V**2*a_0*c*rho*s_t**3*sigma**2*(1 - sigma)/(200*eta3*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + 17*V**2*a_0*c*rho*s_t**3*sigma**2*(1 - sigma)*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta3*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q3(t) + (-17*V**2*a_0*c*rho*s_t**4*sigma**2*(1 - sigma)**2/(200*eta4*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + 17*V**2*a_0*c*rho*s_t**4*sigma**2*(1 - sigma)**2*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta4*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q4(t) + (-17*V**2*a_0*c*rho*s_t**5*sigma**2*(1 - sigma)**3/(200*eta5*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))) + 17*V**2*a_0*c*rho*s_t**5*sigma**2*(1 - sigma)**3*sin(alpha_r)*atan(sin(alpha_r)/((sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))/(200*eta5*sqrt(1 + sin(alpha_r)**2/((sin(Lambda)**2 + cos(Lambda)**2)**2*cos(alpha_r)**2))*(sin(Lambda)**2 + cos(Lambda)**2)*cos(alpha_r)))*q5(t)]])
	return e
